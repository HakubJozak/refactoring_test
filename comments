- clearly too many responsibilities in one class => split using Strategy pattern

- two options abstract class TimezoneService / module TimezoneService ... decided for more Rubyish approach as it does not require to define "abstract" class and there are no instance variables involved

- error handling by checking return values => converted to exceptions 

- guess_rails_timezone refactored quite nicly in my opinion ;)

- the logging certainly needs some smarter handling, all those arbitrary "\t" are making the code quite messy and lousely coupled on location (you move the line, you have to change the log indentation) ... for example automatic indentation for every stack trace level you enter...

- sometimes, I changed the functionality a bit because it cried for help - like overriding the used service vie options parameter just did not make any sense in current setup